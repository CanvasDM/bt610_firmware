# Copyright (c) 2020 Laird Connectivity
# SPDX-License-Identifier: Apache-2.0

menuconfig USER_APPLICATION
     bool "Config User Application"
	 default y

if USER_APPLICATION

config LAIRD_CONNECTIVITY_DEBUG
    bool
    default n

config JSON_BRACKET_BUFFER_SIZE
    int "The maximum size JSON message that can be processed"
    default 1536
    help
        This applies to sensor messages received over Bluetooth.

config ATTR_SAVE_DELAY_MS
    int "Time (in ms) before saving attributes to filesystem to cache other data to write"
    default 30000
    range 1000 3600000

config UART_SHUTOFF
    bool "Enables shutting the main UART off to conserve power"
    default y

config FILE_ACCESS_LOG_LEVEL
    int "File access log level for reading/writing files over SMP"
    range 0 4
    default 0

config RECOVERY_FILE_PATH
    string "File name (including path) of where the recovery count file is stored"
    default "/lfs/recovery_count"

config ATTR_SHELL_ALLOW_DEBUG_COMMANDS
    bool "Enables shell functions that can modify, dump and load data"
    help
        This should not be enabled for production builds.

menuconfig MINIMUM_FIRMWARE_VERSION_FOTA_CHECK
    bool "Enable minimum firmware version FOTA check"
    default n

config MINIMUM_FIRMWARE_VERSION_MAJOR
    int "Major firmware version (a.x.x) which is the minimum allowed for FOTA"
    range 0 255
    default 1
    depends on MINIMUM_FIRMWARE_VERSION_FOTA_CHECK

config MINIMUM_FIRMWARE_VERSION_MINOR
    int "Minor firmware version (x.b.x) which is the minimum allowed for FOTA"
    range 0 255
    default 28
    depends on MINIMUM_FIRMWARE_VERSION_FOTA_CHECK

config MINIMUM_FIRMWARE_VERSION_REVISION
    int "Revision firmware version (x.x.c) which is the minimum allowed for FOTA"
    range 0 65535
    default 0
    depends on MINIMUM_FIRMWARE_VERSION_FOTA_CHECK

config MAX_SETTINGS_FILE_SIZE
    int "Maximum size of settings file before removing to save space"
    range 0 4096
    default 1024
    depends on SETTINGS_FS
    help
        A setting of 0 will not purge the file, purge size must be greater than
	256 to be valid.

menuconfig WDT
    bool "Config Watchdog Timer"
    imply WATCHDOG
    default y
    help
        Enable-to-Disable requires power cycle or watchdog reset.
        Watchdog cannot be stopped once started.
        It can be reconfigured after a reset.
        If a watchdog reset occurs, then it won't cause another
        reset unless it is re-enabled.

if WDT

config WDT_INIT_PRIORITY
    int "System init priority (Application)"
    default 0

config WDT_LOG_LEVEL
    int "Log level for BLE watchdog module"
    range 0 4
    default 3

config WDT_TIMEOUT_MILLISECONDS
    int "Rate in milliseconds for watchdog"
    range 18000 1200000
    default 600000
    help
        Default timeout is 10 minutes

config WDT_WORK_QUEUE_STACK_SIZE
    int
    default 320

config WDT_TEST
    bool "Force the watchdog to timeout (set during initialization)"

endif # WDT

endif # USER_APPLICATION

rsource "../common/Kconfig"

source "Kconfig.zephyr"
